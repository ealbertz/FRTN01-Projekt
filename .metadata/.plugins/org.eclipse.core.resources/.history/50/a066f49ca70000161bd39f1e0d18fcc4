package communication;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public class ProcessInput implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private double vel;
	private double pos;

	public ProcessInput(double vel, double pos) {

		this.vel = vel;
		this.pos = pos;

	}

	public double getVel() {
		return vel;
	}

	public double getPos() {
		return pos;
	}
	
	public byte[] getBytes(){
		
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		ObjectOutput out=null;
		byte [] returnBytes;
		
		try{
			 out = new ObjectOutputStream(bos);   
			  out.writeObject(this);
			  returnBytes = bos.toByteArray();
		}catch(IOException e){
		System.out.println("Could not convert to bytes");
		e.printStackTrace();
		}finally{
		}
			try{
				if (out!=null){
					out.close();
				}
			}catch(IOException e){
				// ignorera close exception
			}
			try{
				bos.close();
			}catch(IOException e){
				//ignorera close exception
			}
		}
		return returnBytes;
	}

}
