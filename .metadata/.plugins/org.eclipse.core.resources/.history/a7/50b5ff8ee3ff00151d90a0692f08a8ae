package regulator;

public class ControllerWithObserver {
	private ControlParameters cp;
	private double x1;
	private double x2;
	private double v;



	public ControllerWithObserver () {
		cp = new ControlParameters();

		cp.phi11 = 0.994;
		cp.phi12 = 0;
		cp.phi21 = 0.2493;
		cp.phi22 = 1;
		cp.gamma1 = 0.1122;
		cp.gamma2 = 0.01403;
		cp.l1 = 3.2898;
		cp.l2 = 1.7831;
		cp.lr = 1.7831;
		cp.k1 = 2.0361;
		cp.k2 = 1.2440;
		cp.kv = 3.2096;
	}

	// Calculates the control signal v.
	public synchronized double calculateOutput(double r, double y) {
		return 
	}

	// Updates the controller state.
	public synchronized void updateState(double r, double y) {
		

	}

	// Returns the sampling interval expressed as a long.
	// Note: Explicit type casting needed
	public synchronized long getHMillis() {
		return (long) (p.h * 1000.0);
	}



	// Sets the I-part of the controller to 0.
	// For example needed when changing controller mode.
	public synchronized void reset() {
		

	}
}
