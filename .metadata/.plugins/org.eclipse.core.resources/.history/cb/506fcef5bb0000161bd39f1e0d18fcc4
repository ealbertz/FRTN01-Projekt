package regulatorServer;

import regulator.PIParameters;

//PI class to be written by you
public class VelRegulator {
	// Current PI parameters
	private PIParameters p;

	private double I;

	// Constructor
	public VelRegulator() {
		p = new PIParameters();

		p.Beta = 0.5;
		p.h = 0.05;
		p.K = 2.6133;
		p.Ti = 0.4523;

		this.I = 0.0;
	}

	// Calculates the control signal v.
	public synchronized double calculateOutput(double r, double y) {
		return p.Beta * p.K * r - p.K * y + I;
	}

	// Updates the controller state.
	public synchronized void updateState(double r, double y) {
		I = I + ((p.K * p.h )/ p.Ti) * (r - y);

	}

	// Returns the sampling interval expressed as a long.
	// Note: Explicit type casting needed
	public synchronized long getHMillis() {
		return (long) (p.h * 1000.0);
	}

	

	// Sets the I-part of the controller to 0.
	// For example needed when changing controller mode.
	public synchronized void reset() {
		I = 0.0;

	}


}
